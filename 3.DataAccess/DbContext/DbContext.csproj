<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <RootNamespace>DataAccess.$(MSBuildProjectName)</RootNamespace>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.EntityFrameworkCore" Version="7.0.10" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="7.0.10">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="7.0.10" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="7.0.10" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\..\4.Infrastructure\BaseExtensions\BaseExtensions.csproj" />
      <ProjectReference Include="..\DbConfigureManagement\DbConfigureManagement.csproj" />
      <ProjectReference Include="..\Entities\Entities.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="Migrations\" />
    </ItemGroup>

    <Target Name="PostBuild" AfterTargets="PostBuildEvent">
        <PropertyGroup>
            <!-- %3B is semicolon (;)  -->

            <!--Создаем первую миграцию-->
            <_AddFirstMigration>
                Write-Host "Создаем первую миграцию" -ForegroundColor Green
                Write-Host ""
                dotnet ef migrations add Initial -o Migrations -p "$(ProjectPath)" -v
                pause
            </_AddFirstMigration>

            <!--Создаем миграцию-->
            <_AddMigration>
                Write-Host "Создаем миграцию" -ForegroundColor Green
                Write-Host ""
                $MigrationName = Read-Host "Введите название миграции"
                dotnet ef migrations add $MigrationName -o Migrations -p "$(ProjectPath)" -v
                pause
            </_AddMigration>

            <!--Удаляем последнюю миграцию-->
            <_RemoveMigration>
                Write-Host "Удаляем последнюю миграцию" -ForegroundColor Green
                Write-Host ""
                dotnet ef migrations remove -p "$(ProjectPath)" -v
                pause
            </_RemoveMigration>

            <!--Обновляем базу данных до последней миграции-->
            <_UpdateDatabase>
                Write-Host "Обновляем базу данных до последней миграции" -ForegroundColor Green
                Write-Host ""
<!--                Read-Host "Выполните сборку (а лучше - пересборку) проекта '$(ProjectName)' и нажмите 'Enter'"-->
                dotnet ef database update -p "$(ProjectPath)" -v <!--&#45;&#45;no-build -->
                pause
            </_UpdateDatabase>

        </PropertyGroup>

        <WriteLinesToFile File="$(ProjectDir)Scripts\Создать первую миграцию.ps1" Lines="$(_AddFirstMigration)" WriteOnlyWhenDifferent="true" Overwrite="true" Encoding="windows-1251" />
        <WriteLinesToFile File="$(ProjectDir)Scripts\Создать миграцию.ps1" Lines="$(_AddMigration)" WriteOnlyWhenDifferent="true" Overwrite="true" Encoding="windows-1251" />
        <WriteLinesToFile File="$(ProjectDir)Scripts\Удалить последнюю миграцию.ps1" Lines="$(_RemoveMigration)" WriteOnlyWhenDifferent="true" Overwrite="true" Encoding="windows-1251" />
        <WriteLinesToFile File="$(ProjectDir)Scripts\Обновить базу данных до последней миграции.ps1" Lines="$(_UpdateDatabase)" WriteOnlyWhenDifferent="true" Overwrite="true" Encoding="windows-1251" />
    </Target>

</Project>
